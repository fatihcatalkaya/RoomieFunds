<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>de.flur4</groupId>
    <artifactId>roomiefunds</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <compiler-plugin.version>3.13.0</compiler-plugin.version>
        <maven.compiler.release>21</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
        <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
        <quarkus.platform.version>3.18.4</quarkus.platform.version>
        <skipITs>true</skipITs>
        <surefire-plugin.version>3.5.2</surefire-plugin.version>
        <testcontainers.version>1.20.4</testcontainers.version>
        <flywayMavenPlugin.version>11.3.1</flywayMavenPlugin.version>
        <groovyMavenPluginVersion>2.1.1</groovyMavenPluginVersion>
        <buildHelperPlugin.version>3.5.0</buildHelperPlugin.version>
        <jooq.version>3.20.1</jooq.version>
        <quarkus.jooq.version>2.0.1</quarkus.jooq.version>

        <postgresContainerVersion>postgres:17.3-alpine</postgresContainerVersion>
        <jooq.codegen.jdbc.username>postgres</jooq.codegen.jdbc.username>
        <jooq.codegen.jdbc.password>postgres</jooq.codegen.jdbc.password>
        <jooq.codegen.jdbc.database>postgres</jooq.codegen.jdbc.database>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>${quarkus.platform.artifact-id}</artifactId>
                <version>${quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-flyway</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-openapi</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-rest-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-oidc</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-agroal</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-health</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-jdbc-postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-arc</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.jooq</groupId>
            <artifactId>quarkus-jooq</artifactId>
            <version>${quarkus.jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <version>3.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>${jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta</artifactId>
            <version>${jooq.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.36</version>
        </dependency>

        <dependency>
            <groupId>org.javatuples</groupId>
            <artifactId>javatuples</artifactId>
            <version>1.2</version>
        </dependency>

        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/frontend/dist/</directory>
                <targetPath>frontend</targetPath>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.platform.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                            <goal>generate-code</goal>
                            <goal>generate-code-tests</goal>
                            <goal>native-image-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler-plugin.version}</version>
                <configuration>
                    <parameters>true</parameters>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>${maven.home}</maven.home>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner
                        </native.image.path>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>${maven.home}</maven.home>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <skipITs>false</skipITs>
                <quarkus.native.enabled>true</quarkus.native.enabled>
            </properties>
        </profile>
        <profile>
            <id>jooq</id>
            <activation>
                <property>
                    <name>gen-jooq</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>groovy-maven-plugin</artifactId>
                        <version>${groovyMavenPluginVersion}</version>
                        <executions>
                            <execution>
                                <!-- Start the container in any phase before the actual code
                                     generation is required, i.e. at the latest in
                                     generate-sources -->
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source>
                                        db = new org.testcontainers.containers.PostgreSQLContainer(
                                                "${postgresContainerVersion}")
                                                .withUsername("${jooq.codegen.jdbc.username}")
                                                .withDatabaseName("${jooq.codegen.jdbc.database}")
                                                .withPassword("${jooq.codegen.jdbc.password}")

                                        db.start()

                                        // After you've started the container, collect its generated
                                        // JDBC URL (which contains a random port)
                                        project.properties.setProperty('db.url', db.getJdbcUrl())
                                    </source>
                                </configuration>
                            </execution>
                        </executions>

                        <dependencies>
                            <dependency>
                                <groupId>org.testcontainers</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${testcontainers.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>

                    <plugin>
                        <groupId>org.flywaydb</groupId>
                        <artifactId>flyway-maven-plugin</artifactId>
                        <version>${flywayMavenPlugin.version}</version>
                        <executions>
                            <execution>

                                <!-- We run the migration in the same phase, before jOOQ's
                                     code generation -->
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>migrate</goal>
                                </goals>
                                <configuration>
                                    <!-- This URL has been set by groovy, above -->
                                    <url>${db.url}</url>
                                    <user>${jooq.codegen.jdbc.username}</user>
                                    <password>${jooq.codegen.jdbc.password}</password>
                                    <locations>
                                        <location>
                                            filesystem:src/main/resources/db/migration
                                        </location>
                                    </locations>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.flywaydb</groupId>
                                <artifactId>flyway-database-postgresql</artifactId>
                                <version>${flywayMavenPlugin.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-codegen-maven</artifactId>
                        <version>${jooq.version}</version>
                        <executions>
                            <execution>
                                <id>java-generator</id>

                                <!-- Same phase as above, but the previous plugins have already
                                     executed, so we're generating the db post migration -->
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>

                                <configuration>
                                    <jdbc>
                                        <!-- Again, this URL has been set by groovy, above -->
                                        <url>${db.url}</url>
                                        <user>${jooq.codegen.jdbc.username}</user>
                                        <password>${jooq.codegen.jdbc.password}</password>
                                    </jdbc>
                                    <generator>
                                        <generate>
                                            <implicitJoinPathsToMany>false</implicitJoinPathsToMany>
                                        </generate>
                                        <database>
                                            <inputSchema>public</inputSchema>
                                            <excludes>
                                                flyway_schema_history|gin.*|gtrgm.*|word.*|strict_word_similarity_.*|similarity.*|strict_word_similarity.*|set_limit|show_limit|show_trgm
                                            </excludes>
                                        </database>
                                        <target>
                                            <packageName>de.flur4.roomiefunds.infrastructure.jooq</packageName>
                                            <directory>${project.build.directory}/generated-sources/jooq</directory>
                                        </target>
                                    </generator>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>${buildHelperPlugin.version}</version>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>${project.build.directory}/generated-sources/jooq</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>frontend</id>
            <activation>
                <property>
                    <name>gen-frontend</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>1.15.1</version>
                        <executions>
                            <execution>
                                <id>install node and npm</id>
                                <configuration>
                                    <nodeVersion>v20.18.2</nodeVersion>
                                    <npmVersion>10.8.2</npmVersion>
                                    <workingDirectory>${project.build.sourceDirectory}/../frontend</workingDirectory>
                                </configuration>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <phase>generate-resources</phase>
                            </execution>
                            <execution>
                                <id>npm ci</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <arguments>ci</arguments>
                                    <workingDirectory>${project.build.sourceDirectory}/../frontend</workingDirectory>
                                </configuration>
                                <phase>generate-resources</phase>
                            </execution>
                            <execution>
                                <id>npm run build</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <arguments>run build</arguments>
                                    <workingDirectory>${project.build.sourceDirectory}/../frontend</workingDirectory>
                                </configuration>
                                <phase>generate-resources</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
