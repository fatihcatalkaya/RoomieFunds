// This file is auto-generated by @hey-api/openapi-ts

export type Aspsp = {
    name?: string;
    country?: string;
};

export type AspspData = {
    name?: string;
    country?: string;
    logo?: string;
    psu_types?: Array<PsuType>;
    auth_methods?: Array<AuthMethod>;
    maximum_consent_validity?: number;
    beta?: boolean;
};

export type Account = {
    id?: number;
    name?: string;
    active?: boolean;
};

export type AuthMethod = {
    name?: string;
    title?: string;
    psu_type?: PsuType;
    credentials?: Array<Credential>;
    approach?: AuthenticationApproach;
    hidden_method?: boolean;
};

export type AuthenticationApproach = 'REDIRECT' | 'DECOUPLED' | 'EMBEDDED';

export type CreateAccountDto = {
    name: string;
    active: boolean;
};

export type CreatePersonDto = {
    name: string;
    room: string;
    paysFloorFees: boolean;
    printOnProductTallyList: boolean;
};

export type CreateProductDto = {
    name: string;
    price?: number;
    print?: boolean;
};

export type CreateRecurringTransactionDto = {
    amount?: number;
    sourceAccountId?: number;
    targetAccountId?: number;
    valueDayOfMonth?: number;
    name: string;
    transactionDescription: string;
};

export type CreateTransactionDto = {
    sourceAccountId?: number;
    targetAccountId?: number;
    amount?: number;
    valueDate?: LocalDate;
    description: string;
};

export type Credential = {
    name?: string;
    title?: string;
    required?: boolean;
    description?: string;
};

export type EnableBankingAccountDto = {
    id?: number;
    uid?: string;
    iban?: string;
};

export type EnableBankingSession = {
    id?: number;
    validUntil?: OffsetDateTime;
    bankName?: string;
    bankAccountIban?: string;
    bankAccountUid?: string;
    accountId?: number;
};

export type EnableBankingUnfinishedSession = {
    unfinishedSessionId?: number;
    validUntil?: OffsetDateTime;
    bankName?: string;
    accounts?: Array<EnableBankingAccountDto>;
};

export type FinishSessionRequest = {
    bankAccountIban: string;
    bankAccountUid: string;
    accountId: number;
};

export type Flurbeitrag = {
    flurbeitrag?: number;
};

export type GetAspspResponse = {
    aspsps?: Array<AspspData>;
};

export type GetRecurringTransactionDto = {
    id?: number;
    amount?: number;
    sourceAccountId?: number;
    sourceAccountName?: string;
    sourceAccountActive?: boolean;
    targetAccountId?: number;
    targetAccountName?: string;
    targetAccountActive?: boolean;
    valueDayOfMonth?: number;
    name?: string;
    transactionDescription?: string;
};

export type LocalDate = string;

export type LogEntryDto = {
    id?: number;
    createdAt?: OffsetDateTime;
    logOperation?: LogOperations;
    modifiedTableName?: string;
    modifiedBy?: string;
    subjectBeforeJson?: string;
    subjectAfterJson?: string;
};

export type LogOperations = 'create' | 'update' | 'delete';

export type OffsetDateTime = string;

export type PsuType = 'BUSINESS' | 'PERSONAL';

export type Person = {
    id?: number;
    name?: string;
    room?: string;
    paysFloorFees?: boolean;
    accountId?: number;
    printOnProductTallyList?: boolean;
};

export type Product = {
    id?: number;
    name?: string;
    price?: number;
    print?: boolean;
};

export type StartAuthorizationDto = {
    aspsp?: Aspsp;
    maximumConsentValidity?: number;
    authMethod?: string;
};

export type StartAuthorizationResponse = {
    url?: string;
    authorization_id?: string;
    psu_id_hash?: string;
};

export type Transaction = {
    id?: number;
    sourceAccountId?: number;
    sourceAccountName?: string;
    sourceAccountActive?: boolean;
    targetAccountId?: number;
    targetAccountName?: string;
    targetAccountActive?: boolean;
    amount?: number;
    createdAt?: OffsetDateTime;
    valueDate?: LocalDate;
    description?: string;
    hasReceipt?: boolean;
};

export type TransactionSaldoDto = {
    transaction?: Transaction;
    saldo?: number;
    sourceAccountNameParts?: Array<string>;
    targetAccountNameParts?: Array<string>;
};

export type UpdateAccountDto = {
    name?: string | null;
    active?: boolean | null;
};

export type UpdatePersonDto = {
    name?: string | null;
    room?: string | null;
    paysFloorFees?: boolean | null;
    printOnProductTallyList?: boolean | null;
};

export type UpdateProductDto = {
    name?: string | null;
    price?: number | null;
    print?: boolean | null;
};

export type UpdateRecurringTransactionDto = {
    amount?: number | null;
    sourceAccountId?: number | null;
    targetAccountId?: number | null;
    valueDayOfMonth?: number | null;
    name?: string | null;
    transactionDescription?: string | null;
};

export type UpdateTransactionDto = {
    sourceAccountId?: number | null;
    targetAccountId?: number | null;
    amount?: number | null;
    valueDate?: LocalDate | null;
    description?: string | null;
};

export type GetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type GetResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiAccountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/account';
};

export type GetApiAccountErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiAccountResponses = {
    /**
     * OK
     */
    200: Array<Account>;
};

export type GetApiAccountResponse = GetApiAccountResponses[keyof GetApiAccountResponses];

export type PostApiAccountData = {
    body: CreateAccountDto;
    path?: never;
    query?: never;
    url: '/api/account';
};

export type PostApiAccountErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PostApiAccountResponses = {
    /**
     * OK
     */
    200: Account;
};

export type PostApiAccountResponse = PostApiAccountResponses[keyof PostApiAccountResponses];

export type DeleteApiAccountByAccountIdData = {
    body?: never;
    path: {
        accountId: number;
    };
    query?: never;
    url: '/api/account/{accountId}';
};

export type DeleteApiAccountByAccountIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type DeleteApiAccountByAccountIdResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeleteApiAccountByAccountIdResponse = DeleteApiAccountByAccountIdResponses[keyof DeleteApiAccountByAccountIdResponses];

export type GetApiAccountByAccountIdData = {
    body?: never;
    path: {
        accountId: number;
    };
    query?: never;
    url: '/api/account/{accountId}';
};

export type GetApiAccountByAccountIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiAccountByAccountIdResponses = {
    /**
     * OK
     */
    200: Account;
};

export type GetApiAccountByAccountIdResponse = GetApiAccountByAccountIdResponses[keyof GetApiAccountByAccountIdResponses];

export type PatchApiAccountByAccountIdData = {
    body: UpdateAccountDto;
    path: {
        accountId: number;
    };
    query?: never;
    url: '/api/account/{accountId}';
};

export type PatchApiAccountByAccountIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PatchApiAccountByAccountIdResponses = {
    /**
     * OK
     */
    200: Account;
};

export type PatchApiAccountByAccountIdResponse = PatchApiAccountByAccountIdResponses[keyof PatchApiAccountByAccountIdResponses];

export type GetApiEnablebankingData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/enablebanking';
};

export type GetApiEnablebankingErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiEnablebankingResponses = {
    /**
     * OK
     */
    200: GetAspspResponse;
};

export type GetApiEnablebankingResponse = GetApiEnablebankingResponses[keyof GetApiEnablebankingResponses];

export type PostApiEnablebankingData = {
    body: StartAuthorizationDto;
    path?: never;
    query?: never;
    url: '/api/enablebanking';
};

export type PostApiEnablebankingErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PostApiEnablebankingResponses = {
    /**
     * OK
     */
    200: StartAuthorizationResponse;
};

export type PostApiEnablebankingResponse = PostApiEnablebankingResponses[keyof PostApiEnablebankingResponses];

export type GetApiEnablebankingEndData = {
    body?: never;
    path?: never;
    query?: {
        code?: string;
    };
    url: '/api/enablebanking/end';
};

export type GetApiEnablebankingEndResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiEnablebankingSessionData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/enablebanking/session';
};

export type GetApiEnablebankingSessionErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiEnablebankingSessionResponses = {
    /**
     * OK
     */
    200: Array<EnableBankingSession>;
};

export type GetApiEnablebankingSessionResponse = GetApiEnablebankingSessionResponses[keyof GetApiEnablebankingSessionResponses];

export type GetApiEnablebankingSessionUnfinishedBySessionIdData = {
    body?: never;
    path: {
        sessionId: number;
    };
    query?: never;
    url: '/api/enablebanking/session/unfinished/{sessionId}';
};

export type GetApiEnablebankingSessionUnfinishedBySessionIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiEnablebankingSessionUnfinishedBySessionIdResponses = {
    /**
     * OK
     */
    200: EnableBankingUnfinishedSession;
};

export type GetApiEnablebankingSessionUnfinishedBySessionIdResponse = GetApiEnablebankingSessionUnfinishedBySessionIdResponses[keyof GetApiEnablebankingSessionUnfinishedBySessionIdResponses];

export type PostApiEnablebankingSessionUnfinishedBySessionIdData = {
    body: FinishSessionRequest;
    path: {
        sessionId: number;
    };
    query?: never;
    url: '/api/enablebanking/session/unfinished/{sessionId}';
};

export type PostApiEnablebankingSessionUnfinishedBySessionIdErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PostApiEnablebankingSessionUnfinishedBySessionIdResponses = {
    /**
     * OK
     */
    200: EnableBankingSession;
};

export type PostApiEnablebankingSessionUnfinishedBySessionIdResponse = PostApiEnablebankingSessionUnfinishedBySessionIdResponses[keyof PostApiEnablebankingSessionUnfinishedBySessionIdResponses];

export type DeleteApiEnablebankingUnfinishedSessionBySessionIdData = {
    body?: never;
    path: {
        sessionId: number;
    };
    query?: never;
    url: '/api/enablebanking/unfinished-session/{sessionId}';
};

export type DeleteApiEnablebankingUnfinishedSessionBySessionIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type DeleteApiEnablebankingUnfinishedSessionBySessionIdResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeleteApiEnablebankingUnfinishedSessionBySessionIdResponse = DeleteApiEnablebankingUnfinishedSessionBySessionIdResponses[keyof DeleteApiEnablebankingUnfinishedSessionBySessionIdResponses];

export type GetApiFlurbeitragData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/flurbeitrag';
};

export type GetApiFlurbeitragErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiFlurbeitragResponses = {
    /**
     * OK
     */
    200: Flurbeitrag;
};

export type GetApiFlurbeitragResponse = GetApiFlurbeitragResponses[keyof GetApiFlurbeitragResponses];

export type PutApiFlurbeitragData = {
    body: Flurbeitrag;
    path?: never;
    query?: never;
    url: '/api/flurbeitrag';
};

export type PutApiFlurbeitragErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PutApiFlurbeitragResponses = {
    /**
     * No Content
     */
    204: void;
};

export type PutApiFlurbeitragResponse = PutApiFlurbeitragResponses[keyof PutApiFlurbeitragResponses];

export type GetApiFlurkontoData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/flurkonto';
};

export type GetApiFlurkontoErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiFlurkontoResponses = {
    /**
     * OK
     */
    200: Account | null;
};

export type GetApiFlurkontoResponse = GetApiFlurkontoResponses[keyof GetApiFlurkontoResponses];

export type PutApiFlurkontoData = {
    body: number;
    path?: never;
    query?: never;
    url: '/api/flurkonto';
};

export type PutApiFlurkontoErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PutApiFlurkontoResponses = {
    /**
     * OK
     */
    200: Account;
};

export type PutApiFlurkontoResponse = PutApiFlurkontoResponses[keyof PutApiFlurkontoResponses];

export type GetApiLogData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/log';
};

export type GetApiLogErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiLogResponses = {
    /**
     * OK
     */
    200: Array<LogEntryDto>;
};

export type GetApiLogResponse = GetApiLogResponses[keyof GetApiLogResponses];

export type GetApiLogAccountTransactionsByAccountIdData = {
    body?: never;
    path: {
        account_id: string;
    };
    query?: never;
    url: '/api/log/account-transactions/{account_id}';
};

export type GetApiLogAccountTransactionsByAccountIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiLogAccountTransactionsByAccountIdResponses = {
    /**
     * OK
     */
    200: Array<LogEntryDto>;
};

export type GetApiLogAccountTransactionsByAccountIdResponse = GetApiLogAccountTransactionsByAccountIdResponses[keyof GetApiLogAccountTransactionsByAccountIdResponses];

export type GetApiLogByTableNameData = {
    body?: never;
    path: {
        table_name: string;
    };
    query?: never;
    url: '/api/log/{table_name}';
};

export type GetApiLogByTableNameErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiLogByTableNameResponses = {
    /**
     * OK
     */
    200: Array<LogEntryDto>;
};

export type GetApiLogByTableNameResponse = GetApiLogByTableNameResponses[keyof GetApiLogByTableNameResponses];

export type GetApiLogByTableNameByObjectIdData = {
    body?: never;
    path: {
        object_id: string;
        table_name: string;
    };
    query?: never;
    url: '/api/log/{table_name}/{object_id}';
};

export type GetApiLogByTableNameByObjectIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiLogByTableNameByObjectIdResponses = {
    /**
     * OK
     */
    200: Array<LogEntryDto>;
};

export type GetApiLogByTableNameByObjectIdResponse = GetApiLogByTableNameByObjectIdResponses[keyof GetApiLogByTableNameByObjectIdResponses];

export type GetApiPersonData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/person';
};

export type GetApiPersonErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiPersonResponses = {
    /**
     * OK
     */
    200: Array<Person>;
};

export type GetApiPersonResponse = GetApiPersonResponses[keyof GetApiPersonResponses];

export type PostApiPersonData = {
    body: CreatePersonDto;
    path?: never;
    query?: never;
    url: '/api/person';
};

export type PostApiPersonErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PostApiPersonResponses = {
    /**
     * OK
     */
    200: Person;
};

export type PostApiPersonResponse = PostApiPersonResponses[keyof PostApiPersonResponses];

export type DeleteApiPersonByPersonIdData = {
    body?: never;
    path: {
        personId: number;
    };
    query?: never;
    url: '/api/person/{personId}';
};

export type DeleteApiPersonByPersonIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type DeleteApiPersonByPersonIdResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeleteApiPersonByPersonIdResponse = DeleteApiPersonByPersonIdResponses[keyof DeleteApiPersonByPersonIdResponses];

export type GetApiPersonByPersonIdData = {
    body?: never;
    path: {
        personId: number;
    };
    query?: never;
    url: '/api/person/{personId}';
};

export type GetApiPersonByPersonIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiPersonByPersonIdResponses = {
    /**
     * OK
     */
    200: Person;
};

export type GetApiPersonByPersonIdResponse = GetApiPersonByPersonIdResponses[keyof GetApiPersonByPersonIdResponses];

export type PatchApiPersonByPersonIdData = {
    body: UpdatePersonDto;
    path: {
        personId: number;
    };
    query?: never;
    url: '/api/person/{personId}';
};

export type PatchApiPersonByPersonIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PatchApiPersonByPersonIdResponses = {
    /**
     * OK
     */
    200: Person;
};

export type PatchApiPersonByPersonIdResponse = PatchApiPersonByPersonIdResponses[keyof PatchApiPersonByPersonIdResponses];

export type GetApiProductData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/product';
};

export type GetApiProductErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiProductResponses = {
    /**
     * OK
     */
    200: Array<Product>;
};

export type GetApiProductResponse = GetApiProductResponses[keyof GetApiProductResponses];

export type PostApiProductData = {
    body: CreateProductDto;
    path?: never;
    query?: never;
    url: '/api/product';
};

export type PostApiProductErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PostApiProductResponses = {
    /**
     * OK
     */
    200: Product;
};

export type PostApiProductResponse = PostApiProductResponses[keyof PostApiProductResponses];

export type GetApiProductTallylistData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/product/tallylist';
};

export type GetApiProductTallylistErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiProductTallylistResponses = {
    /**
     * OK
     */
    200: Blob | File;
};

export type GetApiProductTallylistResponse = GetApiProductTallylistResponses[keyof GetApiProductTallylistResponses];

export type DeleteApiProductByProductIdData = {
    body?: never;
    path: {
        productId: number;
    };
    query?: never;
    url: '/api/product/{productId}';
};

export type DeleteApiProductByProductIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type DeleteApiProductByProductIdResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeleteApiProductByProductIdResponse = DeleteApiProductByProductIdResponses[keyof DeleteApiProductByProductIdResponses];

export type GetApiProductByProductIdData = {
    body?: never;
    path: {
        productId: number;
    };
    query?: never;
    url: '/api/product/{productId}';
};

export type GetApiProductByProductIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiProductByProductIdResponses = {
    /**
     * OK
     */
    200: Product;
};

export type GetApiProductByProductIdResponse = GetApiProductByProductIdResponses[keyof GetApiProductByProductIdResponses];

export type PatchApiProductByProductIdData = {
    body: UpdateProductDto;
    path: {
        productId: number;
    };
    query?: never;
    url: '/api/product/{productId}';
};

export type PatchApiProductByProductIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PatchApiProductByProductIdResponses = {
    /**
     * OK
     */
    200: Product;
};

export type PatchApiProductByProductIdResponse = PatchApiProductByProductIdResponses[keyof PatchApiProductByProductIdResponses];

export type GetApiRecurringTransactionData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/recurring-transaction';
};

export type GetApiRecurringTransactionErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiRecurringTransactionResponses = {
    /**
     * OK
     */
    200: Array<GetRecurringTransactionDto>;
};

export type GetApiRecurringTransactionResponse = GetApiRecurringTransactionResponses[keyof GetApiRecurringTransactionResponses];

export type PostApiRecurringTransactionData = {
    body: CreateRecurringTransactionDto;
    path?: never;
    query?: never;
    url: '/api/recurring-transaction';
};

export type PostApiRecurringTransactionErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PostApiRecurringTransactionResponses = {
    /**
     * OK
     */
    200: GetRecurringTransactionDto;
};

export type PostApiRecurringTransactionResponse = PostApiRecurringTransactionResponses[keyof PostApiRecurringTransactionResponses];

export type DeleteApiRecurringTransactionByRecurringTransactionIdData = {
    body?: never;
    path: {
        recurringTransactionId: number;
    };
    query?: never;
    url: '/api/recurring-transaction/{recurringTransactionId}';
};

export type DeleteApiRecurringTransactionByRecurringTransactionIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type DeleteApiRecurringTransactionByRecurringTransactionIdResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeleteApiRecurringTransactionByRecurringTransactionIdResponse = DeleteApiRecurringTransactionByRecurringTransactionIdResponses[keyof DeleteApiRecurringTransactionByRecurringTransactionIdResponses];

export type GetApiRecurringTransactionByRecurringTransactionIdData = {
    body?: never;
    path: {
        recurringTransactionId: number;
    };
    query?: never;
    url: '/api/recurring-transaction/{recurringTransactionId}';
};

export type GetApiRecurringTransactionByRecurringTransactionIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiRecurringTransactionByRecurringTransactionIdResponses = {
    /**
     * OK
     */
    200: GetRecurringTransactionDto;
};

export type GetApiRecurringTransactionByRecurringTransactionIdResponse = GetApiRecurringTransactionByRecurringTransactionIdResponses[keyof GetApiRecurringTransactionByRecurringTransactionIdResponses];

export type PatchApiRecurringTransactionByRecurringTransactionIdData = {
    body: UpdateRecurringTransactionDto;
    path: {
        recurringTransactionId: number;
    };
    query?: never;
    url: '/api/recurring-transaction/{recurringTransactionId}';
};

export type PatchApiRecurringTransactionByRecurringTransactionIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PatchApiRecurringTransactionByRecurringTransactionIdResponses = {
    /**
     * OK
     */
    200: GetRecurringTransactionDto;
};

export type PatchApiRecurringTransactionByRecurringTransactionIdResponse = PatchApiRecurringTransactionByRecurringTransactionIdResponses[keyof PatchApiRecurringTransactionByRecurringTransactionIdResponses];

export type PostApiTransactionData = {
    body: CreateTransactionDto;
    path?: never;
    query?: never;
    url: '/api/transaction';
};

export type PostApiTransactionErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PostApiTransactionResponses = {
    /**
     * OK
     */
    200: Transaction;
};

export type PostApiTransactionResponse = PostApiTransactionResponses[keyof PostApiTransactionResponses];

export type GetApiTransactionAccountByAccountIdData = {
    body?: never;
    path: {
        accountId: number;
    };
    query?: never;
    url: '/api/transaction/account/{accountId}';
};

export type GetApiTransactionAccountByAccountIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiTransactionAccountByAccountIdResponses = {
    /**
     * OK
     */
    200: Array<TransactionSaldoDto>;
};

export type GetApiTransactionAccountByAccountIdResponse = GetApiTransactionAccountByAccountIdResponses[keyof GetApiTransactionAccountByAccountIdResponses];

export type DeleteApiTransactionByTransactionIdData = {
    body?: never;
    path: {
        transactionId: number;
    };
    query?: never;
    url: '/api/transaction/{transactionId}';
};

export type DeleteApiTransactionByTransactionIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type DeleteApiTransactionByTransactionIdResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeleteApiTransactionByTransactionIdResponse = DeleteApiTransactionByTransactionIdResponses[keyof DeleteApiTransactionByTransactionIdResponses];

export type GetApiTransactionByTransactionIdData = {
    body?: never;
    path: {
        transactionId: number;
    };
    query?: never;
    url: '/api/transaction/{transactionId}';
};

export type GetApiTransactionByTransactionIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiTransactionByTransactionIdResponses = {
    /**
     * OK
     */
    200: Transaction;
};

export type GetApiTransactionByTransactionIdResponse = GetApiTransactionByTransactionIdResponses[keyof GetApiTransactionByTransactionIdResponses];

export type PatchApiTransactionByTransactionIdData = {
    body: UpdateTransactionDto;
    path: {
        transactionId: number;
    };
    query?: never;
    url: '/api/transaction/{transactionId}';
};

export type PatchApiTransactionByTransactionIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PatchApiTransactionByTransactionIdResponses = {
    /**
     * OK
     */
    200: Transaction;
};

export type PatchApiTransactionByTransactionIdResponse = PatchApiTransactionByTransactionIdResponses[keyof PatchApiTransactionByTransactionIdResponses];

export type DeleteApiTransactionByTransactionIdReceiptData = {
    body?: never;
    path: {
        transactionId: number;
    };
    query?: never;
    url: '/api/transaction/{transactionId}/receipt';
};

export type DeleteApiTransactionByTransactionIdReceiptErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type DeleteApiTransactionByTransactionIdReceiptResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeleteApiTransactionByTransactionIdReceiptResponse = DeleteApiTransactionByTransactionIdReceiptResponses[keyof DeleteApiTransactionByTransactionIdReceiptResponses];

export type GetApiTransactionByTransactionIdReceiptData = {
    body?: never;
    path: {
        transactionId: number;
    };
    query?: never;
    url: '/api/transaction/{transactionId}/receipt';
};

export type GetApiTransactionByTransactionIdReceiptErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiTransactionByTransactionIdReceiptResponses = {
    /**
     * OK
     */
    200: Blob | File;
};

export type GetApiTransactionByTransactionIdReceiptResponse = GetApiTransactionByTransactionIdReceiptResponses[keyof GetApiTransactionByTransactionIdReceiptResponses];

export type PostApiTransactionByTransactionIdReceiptData = {
    body: {
        receipt?: Blob | File;
    };
    path: {
        transactionId: number;
    };
    query?: never;
    url: '/api/transaction/{transactionId}/receipt';
};

export type PostApiTransactionByTransactionIdReceiptErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PostApiTransactionByTransactionIdReceiptResponses = {
    /**
     * Created
     */
    201: unknown;
};

export type GetByFileNameData = {
    body?: never;
    path: {
        fileName: string;
    };
    query?: never;
    url: '/{fileName}';
};

export type GetByFileNameResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};